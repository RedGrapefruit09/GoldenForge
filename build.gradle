plugins {
    id 'fabric-loom' version '0.11.24' // Fabric-Loom for building mods
    id 'maven-publish' // essential Maven publishing infrastructure
    id 'org.jetbrains.kotlin.jvm' version '1.6.10' // Kotlin support in Gradle
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10' // kotlinx.serialization support
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

// import from gradle.properties
archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    // My Maven repository with all com.redgrapefruit.xxx libraries' artifacts
    maven {
        name = "RedGrapefruit09's Maven"
        url = "https://redgrapefruit09.github.io/maven"
    }

    // CottonMC Maven repository with LibGUI
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    // Toolchain
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Dependencies. See gradle.properties
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_language_kotlin_version}"
    modImplementation include("com.redgrapefruit.datapipe:datapipe:${project.datapipe_version}")
    modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}")
    modImplementation include("com.redgrapefruit.itemnbt:itemnbt:${project.itemnbt_version}")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17 // targeted version of Java

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
